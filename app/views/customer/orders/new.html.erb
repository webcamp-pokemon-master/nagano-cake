<div class="container">
  <%= render 'layouts/errors', obj: @order %>


  <div class="row">
    <h3 class="mt-4 px-4 rounded-circle", style="background:#EEEEEE;">注文情報入力</h3>
  </div>
  <div class="row">
    <div class="col-lg-7 offset-lg-1">
      <%= form_with model: @order, url:comfirm_orders_path, local:true do |f| %>
      　<h4>支払い方法</h4>
          <div class="ml-5">
            <%#= f.radio_button :カラム名, key, オプション %>
            <%= f.radio_button :payment_method, "クレジットカード", checked: true %>
            <%= f.label :payment_method, "クレジットカード" %>
          </div>
          <div class="ml-5">

            <%= f.radio_button :payment_method, "銀行振込" %>
            <%= f.label :payment_method, "銀行振込" %>
          </div>
          <!--modelでenumで定義-->
          <!--enum payment_method: {"クレジットカード": 0, "銀行振込": 1 }-->

        <h4>お届け先</h4>
            <div  class="ml-5">
              <%= f.radio_button :selected_address, 1, checked: true %>
              <%= f.label :selected_address, "ご自身の住所" %><br>
              <%= current_customer.postal_code %> <%=current_customer.address %><br>
              <%= current_customer.last_name %><%= current_customer.first_name%>様
            </div>
            <div  class="ml-5 mt-3">
              <%= f.radio_button :selected_address, 2 %>
              <%= f.label :selected_address, "登録済住所から選択" %>
              <!--f.collection_select(メソッド名, オブジェクトの配列, value属性の項目, テキストの項目 [, オプション or HTML属性 or イベント属性])-->
              <br><%= f.collection_select(:delivery_address_id, @delivery_addresses, :id, :nameaddress) %>
              <%#= f.select :名前, モデル名.カラム名の複数形.keys, オプション %>
            </div>
            <div class="ml-5 mt-3">
              <%= f.radio_button :selected_address, 3 %>
              <%= f.label :selected_address, "新しいお届け先" %><br>
            </div>
          <table class="table table-borderless ml-5">
            <tbody>

            <tr>
              <td>郵便番号(ハイフンなし)</td>
              <td>
                <%= f.text_field :postal_code, class: "form-control", placeholder: "1008111 " %>
              </td>
            </tr>
            <tr>
              <td>住所</td>
              <td><%= f.text_field :address, class: "form-control", placeholder: "東京都千代田区千代田１−１" %></td>
            </tr>
            <tr>
              <td>宛名</td>
              <td><%= f.text_field :name, class: "form-control", placeholder: "宮内庁" %></td>
            </tr>
            <!--f.text_field :hoge は　controllerでparams[:model][:hoge]で取り出せる-->
            <!--radio_buttonの:hogeとlabelの:hogeは同じにする-->
          </tbody>
        </table>
      <div class="row">
  		  <div class="mx-auto">
  		    <%= f.submit "確認画面へ進む", class: "btn btn-info rounded-pill px-5" %>
        </div>
      </div>
      <% end %>
    </div>
  </div>
</div>

<!--具体例-->
<!--ruby.rb-->
<!--f.collection_select(:name, @categories, :id, :name)-->
<!--↓上記の結果-->

<!--<select id="page_name" name="page[name]"><option value="1">Railsの基礎知識</option>-->
<!--<option value="2">Rubyの基礎知識</option>-->
<!--</select>-->
<!--第一引数-->
<!--メソッド名　:name-->
<!--この情報をもとに、selectタグのid属性、name属性を決める。-->
<!--↓の〇〇部分が決まる-->

<!--<select name="○○" id="◯◯">-->
<!--第二引数-->
<!--オブジェクトの配列 @categories-->
<!--その選択肢はどの配列がもとになるの？ということ-->
<!--前提としては-->

<!--@categories = Post.all-->

<!--のように定義されているモデルから配列を取り出してある状態-->

<!--第三引数-->
<!--:id value属性の項目-->
<!--ここにvalueが入る、つまり選択された場合ここの値がDBに送られる。今回は:idなのでidが送られる。-->
<!--↓の◯◯に入る-->

<!--<option value="◯◯">選択肢</option>-->

<!--第四引数-->
<!--:name-->
<!--選択肢に実際に表示するのはこれということを指定している。項目は、optionタグ内のテキストに設定したい値のカラム名が入る。nameカラムを選択肢として表示したいので:nameと設定する。-->
<!--↓の選択肢に:nameが入る-->

<!--<option value="1">選択肢</option>-->

<!--第五引数-->
<!--これはオプションですが-->
<!--prompt: "選択してください"-->
<!--で初期設定でこれが表示されるようになります（オススメ）-->

